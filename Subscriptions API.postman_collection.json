{
	"info": {
		"_postman_id": "73f56fea-c28f-4f9f-b4d2-972eeac6a691",
		"name": "Subscriptions API",
		"description": "- For exception handling I did handle some basic error handling but due to time shortage I did not made any custom error handling.\n- When new post is created event is being fired and we log the data to larvavel.log file.\n- Technically speaking in my opinion queue dispatch jobs not console commands, In order to handle console commands one needs to use to schedule the jobs lets say daily using cron job. Basically we cannot use console command, event, and queue all together to send email notification to users about new post. We can simple use one e.g,\n    - when new post is created we can dispatch emails to all the users.\n    - Or we can schedule console command to dispatch emails on day end daily.\n    - Or we can dispatch a job in queue once the new post is created.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9565425"
	},
	"item": [
		{
			"name": "Create Post For Particular Website",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/websites/1/posts",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"websites",
						"1",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Subscribe to Particular Website",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "user_id",
							"value": "6",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/websites/5/subscribe",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"websites",
						"5",
						"subscribe"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{$randomFullName}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/users",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Websites",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{$randomFullName}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/websites",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"websites"
					]
				}
			},
			"response": []
		}
	]
}